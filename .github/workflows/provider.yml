name: providers-build-and-release

on:
  workflow_call:
    inputs:
      name:
        description: Provider name
        required: true
        type: string

permissions:
  contents: read

env:
  TEST_THIS_WORKFLOW: true # Whether to test this workflow
  RUN_PROVIDER_ATTESTATION: true # Whether to run the provider attestation workflow

jobs:
  package:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    steps:
      - name: Prepare test environment
        uses: ossfellow/.github/actions/tugboat@main
        if: ${{ env.TEST_THIS_WORKFLOW }}
        with:
          target-repo: "wasmCloud/wasmCloud"
          github-token: ${{ secrets.GITHUB_TOKEN }}
          github-assets: |
            ["actions/artifact-attestation/action.yml"]
      - name: Extract tag context
        id: ctx
        run: |
          sha_short=$(git rev-parse --short HEAD)
          echo "owner=${GITHUB_REPOSITORY_OWNER,,}" >> "$GITHUB_OUTPUT"
          echo "sha_short=${sha_short}" >> "$GITHUB_OUTPUT"

          if [[ ${GITHUB_REF} == refs/tags/provider-${{ inputs.name }}-v* ]]; then
            version=${GITHUB_REF_NAME#provider-${{ inputs.name }}-v}
            echo "version=${version}" >> "$GITHUB_OUTPUT"
            echo "tagged version is ${version}"
            if [[ $version == *"-"* ]]; then
              echo "tagged version ${version} is a pre-release"
              echo "prerelease=true" >> "$GITHUB_OUTPUT"
            fi
          else
            version=$(cargo metadata --manifest-path "./crates/provider-${{ inputs.name }}/Cargo.toml" --no-deps --format-version 1 | jq -r '.packages[] | select(.name == "wasmcloud-provider-${{ inputs.name }}") | .version')
            echo "untagged version is ${version}"
            echo "untagged version ${version} is a pre-release"
            echo "version=${version}" >> "$GITHUB_OUTPUT"
            echo "prerelease=true" >> "$GITHUB_OUTPUT"
          fi

      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16
        with:
          path: artifacts
          pattern: ${{ inputs.name }}-provider-*

      - run: chmod +x "./artifacts/${{ inputs.name }}-provider-aarch64-unknown-linux-musl/bin/${{ inputs.name }}-provider"
      - run: chmod +x "./artifacts/${{ inputs.name }}-provider-x86_64-unknown-linux-musl/bin/${{ inputs.name }}-provider"

      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16
        with:
          name: wash-x86_64-unknown-linux-musl

      - run: ls -lhR ./artifacts/
      - run: mv ./bin/wash ./wash
      - run: chmod +x ./wash

      - run: |
          ./wash par create \
                --binary "./artifacts/${{ inputs.name }}-provider-x86_64-unknown-linux-musl/bin/${{ inputs.name }}-provider" \
                --compress \
                --destination "${{ inputs.name }}.par.gz" \
                --name "${{ inputs.name }}-provider" \
                --vendor wasmcloud \
                --version ${{ steps.ctx.outputs.version }}
          ./wash par insert --arch aarch64-linux   --binary "./artifacts/${{ inputs.name }}-provider-aarch64-unknown-linux-musl/bin/${{ inputs.name }}-provider" "${{ inputs.name }}.par.gz"
          ./wash par inspect "${{ inputs.name }}.par.gz"

      # After par creation, attest it
      - name: Attest Provider PAR
        uses: ./.github/actions/artifact-attestation
        if: ${{ env.RUN_PROVIDER_ATTESTATION }}
        with:
          subject-path: ./${{ inputs.name }}.par.gz
          subject-name: ${{ inputs.name }}-provider
          show-summary: true
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b
        with:
          name: ${{ inputs.name }}.par.gz
          path: ${{ inputs.name }}.par.gz

      # GitHub Container Registry
      - name: Push `${{ inputs.name }}` provider version tag to GitHub Container Registry
        # if: startswith(github.ref, format('refs/tags/provider-{0}-v', inputs.name))
        run: ./wash push ghcr.io/${{ github.repository }}/${{ inputs.name }}:${{ steps.ctx.outputs.version }} "${{ inputs.name }}.par.gz"
        env:
          WASH_REG_USER: ${{ github.repository_owner }}
          WASH_REG_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

      # First attest the provider image
      - name: Attest Provider Image
        # if: startswith(github.ref, format('refs/tags/provider-{0}-v', inputs.name))
        uses: ./.github/actions/artifact-attestation
        with:
          artifact-type: image
          subject-path: ghcr.io/${{ github.repository }}/${{ inputs.name }}:${{ steps.ctx.outputs.version }}
          subject-name: ghcr.io/${{ github.repository }}/${{ inputs.name }}
          show-summary: true
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # Then attest and link its SBOM
      # TODO: Figure out how platform information could be determined in this workflow and added to SBOM attestation's subject-name
      - name: Attest Provider Image SBOM
        if: startswith(github.ref, format('refs/tags/provider-{0}-v', inputs.name)) && ${{ env.RUN_PROVIDER_ATTESTATION }}
        uses: ./.github/actions/artifact-attestation
        with:
          artifact-type: sbom
          subject-path: ghcr.io/${{ github.repository }}/${{ inputs.name }}:${{ steps.ctx.outputs.version }}
          subject-name: ghcr.io/${{ github.repository }}/${{ inputs.name }}
          show-summary: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          push-to-registry: true

  # # Ensure that `wash build` and `wash app validate` works for all providers
  # wash-build:
  #   name: build
  #   runs-on: ubuntu-22.04
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       provider:
  #         - bin-path: src/bin/blobstore-azure-provider
  #         - bin-path: src/bin/http-server-provider
  #   steps:
  #     - uses: ossfellow/.github/actions/tugboat@main
  #       with:
  #         target-repo: "wasmCloud/wasmCloud"
  #         github-token: ${{ secrets.GITHUB_TOKEN }}

  #     # Set up wash
  #     - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16
  #       with:
  #         name: wash-x86_64-unknown-linux-musl
  #         path: artifact
  #     - run: chmod +x ./artifact/bin/wash

  #     - name: build provider
  #       run: |
  #         ./artifact/bin/wash build -p ${{ matrix.provider.bin-path }}
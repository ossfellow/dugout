name: providers-build-and-release

on:
  workflow_call:
    inputs:
      name:
        description: Provider name
        required: true
        type: string

permissions:
  contents: read

jobs:
  package:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    # TODO: Validate this can correctly extract version number of released version of providers
    steps:
      - uses: ossfellow/.github/actions/tugboat@main
        with:
          target-repo: "wasmCloud/wasmCloud"
          github-token: ${{ secrets.GITHUB_TOKEN }}
          github-assets: |
            ["actions/artifact-attestation/action.yml",
              "actions/oci-transformations/action.yml",
              "actions/sbom-generation/action.yml",
              "actions/publish-sboms-and-attestations/action.yml"]
      - name: Extract tag context
        id: ctx
        run: |
          sha_short=$(git rev-parse --short HEAD)
          echo "owner=${GITHUB_REPOSITORY_OWNER,,}" >> "$GITHUB_OUTPUT"
          echo "sha_short=${sha_short}" >> "$GITHUB_OUTPUT"

          if [[ ${GITHUB_REF} == refs/tags/provider-${{ inputs.name }}-v* ]]; then
            version=${GITHUB_REF_NAME#provider-${{ inputs.name }}-v}
            echo "version=${version}" >> "$GITHUB_OUTPUT"
            echo "tagged version is ${version}"
            if [[ $version == *"-"* ]]; then
              echo "tagged version ${version} is a pre-release"
              echo "prerelease=true" >> "$GITHUB_OUTPUT"
            fi
          else
            version=$(cargo metadata --manifest-path "./crates/provider-${{ inputs.name }}/Cargo.toml" --no-deps --format-version 1 | jq -r '.packages[] | select(.name == "wasmcloud-provider-${{ inputs.name }}") | .version')
            echo "untagged version is ${version}"
            echo "untagged version ${version} is a pre-release"
            echo "version=${version}" >> "$GITHUB_OUTPUT"
            echo "prerelease=true" >> "$GITHUB_OUTPUT"
          fi

      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16
        with:
          path: artifacts

      - run: chmod +x "./artifacts/wasmcloud-aarch64-apple-darwin/bin/${{ inputs.name }}-provider"
      - run: chmod +x "./artifacts/wasmcloud-x86_64-apple-darwin/bin/${{ inputs.name }}-provider"

      - run: mv "./artifacts/wasmcloud-aarch64-apple-darwin/bin/wash" wash
      - run: chmod +x wash

      - run: |
          ./wash par create \
                --binary "./artifacts/wasmcloud-aarch64-apple-darwin/bin/${{ inputs.name }}-provider" \
                --compress \
                --destination "${{ inputs.name }}.par.gz" \
                --name "${{ inputs.name }}-provider" \
                --vendor wasmcloud \
                --version ${{ steps.ctx.outputs.version }}
          ./wash par insert --arch x86_64-macos   --binary "./artifacts/wasmcloud-x86_64-apple-darwin/bin/${{ inputs.name }}-provider" "${{ inputs.name }}.par.gz"
          ./wash par inspect "${{ inputs.name }}.par.gz"

      # After par creation, attest it
      - name: Attest Provider PAR
        uses: ./.github/actions/artifact-attestation
        with:
          subject-path: ./${{ inputs.name }}.par.gz
          subject-name: ${{ inputs.name }}-provider
          show-summary: true
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b
        with:
          name: ${{ inputs.name }}.par.gz
          path: ${{ inputs.name }}.par.gz

      # GitHub Container Registry
      - name: Push `${{ inputs.name }}` provider version tag to GitHub Container Registry
        if: startswith(github.ref, format('refs/tags/provider-{0}-v', inputs.name))
        run: ./wash push ghcr.io/${{ steps.ctx.outputs.owner }}/${{ inputs.name }}:${{ steps.ctx.outputs.version }} "${{ inputs.name }}.par.gz"
        env:
          WASH_REG_USER: ${{ github.repository_owner }}
          WASH_REG_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

      # First attest the provider image
      - name: Attest Provider Image
        if: startswith(github.ref, format('refs/tags/provider-{0}-v', inputs.name))
        uses: ./.github/actions/artifact-attestation
        with:
          artifact-type: image
          subject-path: ghcr.io/${{ steps.ctx.outputs.owner }}/${{ inputs.name }}:${{ steps.ctx.outputs.version }}
          subject-name: ${{ inputs.name }}-provider
          show-summary: true
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # Then attest and link its SBOM
      - name: Attest Provider Image SBOM
        if: startswith(github.ref, format('refs/tags/provider-{0}-v', inputs.name))
        uses: ./.github/actions/artifact-attestation
        with:
          artifact-type: sbom
          subject-path: ghcr.io/${{ steps.ctx.outputs.owner }}/${{ inputs.name }}:${{ steps.ctx.outputs.version }}
          subject-name: ${{ inputs.name }}-provider
          sbom-path: ./artifacts/wasmcloud-aarch64-apple-darwin/bin/${{ inputs.name }}-provider.cdx.json
          show-summary: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          push-to-registry: true

  # Ensure that `wash build` and `wash app validate` works for all providers
  wash-build:
    name: build
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        provider:
          - bin-path: src/bin/blobstore-azure-provider
          - bin-path: src/bin/http-server-provider
    steps:
      - uses: ossfellow/.github/actions/tugboat@main
        with:
          target-repo: "wasmCloud/wasmCloud"
          github-token: ${{ secrets.GITHUB_TOKEN }}
          github-assets: |
            ["actions/artifact-attestation/action.yml",
              "actions/oci-transformations/action.yml",
              "actions/sbom-generation/action.yml",
              "actions/publish-sboms-and-attestations/action.yml"]

      # Set up wash
      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16
        with:
          path: artifacts
      - run: mv "./artifacts/wasmcloud-aarch64-apple-darwin/bin/wash" wash
      - run: chmod +x wash

      - name: build provider
        run: |
          ./wash build -p ${{ matrix.provider.bin-path }}

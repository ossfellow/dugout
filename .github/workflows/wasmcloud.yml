name: wasmcloud

on:
  workflow_dispatch:
    inputs:
      component:
        required: true
        default: "wasmcloud"
        type: string

permissions:
  contents: read

# Define versions at workflow level
env:
  WASMCLOUD_TEST_VERSION: "v1.51.1" # wasmCloud version to test
  WASH_TEST_VERSION: "wash-cli-v0.38.0" # wash-cli version to test

jobs:
  setup-test-ref:
    runs-on: ubuntu-22.04
    steps:
      - uses: ./dugout/.github/actions/workflow-change-validation-checkout
        with:
          github-assets: |
            ["workflows/provider.yml",
              "actions/artifact-attestation/action.yml",
              "actions/oci-transformations/action.yml",
              "actions/sbom-generation/action.yml",
              "actions/publish-sboms-and-attestations/action.yml"]

      - name: Set up test tags
        run: |
          # Set up both wasmCloud and wash-cli tags
          git tag ${{ env.WASMCLOUD_TEST_VERSION }}
          git tag ${{ env.WASH_TEST_VERSION }}

          # Checkout the appropriate tag based on workflow context
          if [[ "${{ github.event.inputs.component }}" == "wash" ]]; then
            git checkout ${{ env.WASH_TEST_VERSION }}
          else
            git checkout ${{ env.WASMCLOUD_TEST_VERSION }}
          fi

  build-wash-bin:
    strategy:
      matrix:
        config:
          - target: aarch64-apple-darwin
          - target: x86_64-apple-darwin

    name: wash-${{ matrix.config.target }}
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
      attestations: write
    steps:
      - uses: ./dugout/.github/actions/workflow-change-validation-checkout
        with:
          github-assets: |
            ["workflows/provider.yml",
              "actions/artifact-attestation/action.yml",
              "actions/oci-transformations/action.yml",
              "actions/sbom-generation/action.yml",
              "actions/publish-sboms-and-attestations/action.yml"]
      - uses: ./.github/actions/install-nix
      - uses: ./.github/actions/build-nix
        with:
          package: wash-${{ matrix.config.target }}

      # After build completes, attest binaries
      - name: Attest Built Wash Binaries
        uses: ./.github/actions/artifact-attestation
        with:
          subject-path: ./artifacts/wash-${{ matrix.config.target }}/bin/wash
          subject-name: wash-${{ matrix.config.target }}
          show-summary: true
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # After attestation, generate SBOMs
      - name: Generate SBOMs for Wash
        uses: ./.github/actions/sbom-generation
        with:
          artifact-path: ./artifacts/wash-${{ matrix.config.target }}/bin/wash
          artifact-name: wash-${{ matrix.config.target }}
          language: rust
          package-name: wash

      # Attest SBOMs
      - name: Attest SBOMs for Wash
        uses: ./.github/actions/artifact-attestation
        with:
          artifact-type: sbom
          subject-path: ./artifacts/wash-${{ matrix.config.target }}/bin/wash
          subject-name: wash-${{ matrix.config.target }}
          sbom-path: ./artifacts/wash-${{ matrix.config.target }}/bin/wash.spdx.json
          show-summary: true

  build-wasmcloud-bin:
    strategy:
      matrix:
        config:
          - target: aarch64-apple-darwin
          - target: x86_64-apple-darwin

    name: wasmcloud-${{ matrix.config.target }}
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
      attestations: write
    steps:
      - uses: ./dugout/.github/actions/workflow-change-validation-checkout
        with:
          github-assets: |
            ["workflows/provider.yml",
              "actions/artifact-attestation/action.yml",
              "actions/oci-transformations/action.yml",
              "actions/sbom-generation/action.yml",
              "actions/publish-sboms-and-attestations/action.yml"]
      - uses: ./.github/actions/install-nix
      - uses: ./.github/actions/build-nix
        with:
          package: wasmcloud-${{ matrix.config.target }}

      # After build completes, attest binaries
      - name: Attest Built WasmCloud Binaries
        uses: ./.github/actions/artifact-attestation
        with:
          subject-path: ./artifacts/wasmcloud-${{ matrix.config.target }}/bin/wasmcloud
          subject-name: wasmcloud-${{ matrix.config.target }}
          show-summary: true
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # After attestation, generate SBOMs
      - name: Generate SBOMs for WasmCloud
        uses: ./.github/actions/sbom-generation
        with:
          artifact-path: ./artifacts/wasmcloud-${{ matrix.config.target }}/bin/wasmcloud
          artifact-name: wasmcloud-${{ matrix.config.target }}
          language: rust
          package-name: wasmcloud

      # Attest SBOMs
      - name: Attest SBOMs for WasmCloud
        uses: ./.github/actions/artifact-attestation
        with:
          artifact-type: sbom
          subject-path: ./artifacts/wasmcloud-${{ matrix.config.target }}/bin/wasmcloud
          subject-name: wasmcloud-${{ matrix.config.target }}
          sbom-path: ./artifacts/wasmcloud-${{ matrix.config.target }}/bin/wasmcloud.spdx.json
          show-summary: true

  build-provider-bin:
    strategy:
      matrix:
        name:
          - blobstore-azure
          - http-server

        target:
          - aarch64-apple-darwin
          - x86_64-apple-darwin

    name: ${{ matrix.name }}-provider-${{ matrix.target }}
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
      attestations: write
    steps:
      - uses: ./dugout/.github/actions/workflow-change-validation-checkout
        with:
          github-assets: |
            ["workflows/provider.yml",
              "actions/artifact-attestation/action.yml",
              "actions/oci-transformations/action.yml",
              "actions/sbom-generation/action.yml",
              "actions/publish-sboms-and-attestations/action.yml"]
      - uses: ./.github/actions/install-nix
      - uses: ./.github/actions/build-nix
        with:
          package: ${{ matrix.name }}-provider-${{ matrix.target }}

      # After build completes, attest binaries
      - name: Attest Built Provider Binaries
        uses: ./.github/actions/artifact-attestation
        with:
          subject-path: ./artifacts/${{ matrix.name }}-provider-${{ matrix.target }}/bin/${{ matrix.name }}-provider
          subject-name: ${{ matrix.name }}-provider-${{ matrix.target }}
          show-summary: true
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # After attestation, generate SBOMs
      - name: Generate SBOMs for Provider
        uses: ./.github/actions/sbom-generation
        with:
          artifact-path: ./artifacts/${{ matrix.name }}-provider-${{ matrix.target }}/bin/${{ matrix.name }}-provider
          artifact-name: ${{ matrix.name }}-provider-${{ matrix.target }}
          language: rust
          package-name: ${{ matrix.name }}-provider

      # Attest SBOMs
      - name: Attest SBOMs for Provider
        uses: ./.github/actions/artifact-attestation
        with:
          artifact-type: sbom
          subject-path: ./artifacts/${{ matrix.name }}-provider-${{ matrix.target }}/bin/${{ matrix.name }}-provider
          subject-name: ${{ matrix.name }}-provider-${{ matrix.target }}
          sbom-path: ./artifacts/${{ matrix.name }}-provider-${{ matrix.target }}/bin/${{ matrix.name }}-provider.spdx.json
          show-summary: true

  providers:
    strategy:
      matrix:
        include:
          - name: blobstore-azure
            subject: BLOBSTORE_AZURE_SUBJECT

          - name: http-server
            subject: HTTP_SERVER_SUBJECT
    needs:
      - build-wash-bin
      - build-provider-bin
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    uses: ./.github/workflows/provider.yml
    with:
      name: ${{ matrix.name }}

  oci:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        include:
          - bin: wasmcloud

          - bin: wash
            prefix: wash-cli-
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    needs:
      - build-wash-bin
      - build-wasmcloud-bin
    steps:
      - uses: ./dugout/.github/actions/workflow-change-validation-checkout
        with:
          github-assets: |
            ["workflows/provider.yml",
              "actions/artifact-attestation/action.yml",
              "actions/oci-transformations/action.yml",
              "actions/sbom-generation/action.yml",
              "actions/publish-sboms-and-attestations/action.yml"]
      - uses: ./.github/actions/install-nix
      - name: Extract tag context
        id: ctx
        run: |
          echo "owner=${GITHUB_REPOSITORY_OWNER,,}" >> "$GITHUB_OUTPUT"
          echo "sha_short=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

          version=${GITHUB_REF_NAME#${{ matrix.prefix }}v}
          echo "version=${version}" >> "$GITHUB_OUTPUT"
          echo "version is ${version}"
          if [[ $version == *"-"* ]]; then
            echo "version ${version} is a pre-release"
            echo "prerelease=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Login to GitHub Container Registry
        if: startswith(github.ref, format('refs/tags/{0}v', matrix.prefix)) || github.ref == 'refs/heads/main'
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install `skopeo`
        run: nix profile install --inputs-from . 'nixpkgs#skopeo'

      - name: Build `${{ matrix.bin }}` image
        run: |
          nix build -L .#${{ matrix.bin }}-oci-wolfi -o ./oci-wolfi

      - name: Inspect current ${{ matrix.bin}} image configuration files (Image Manifest V 2, Schema 2 - aka. Docker Distribution format)
        if: ${{ github.repository_owner == 'ossfellow' }}
        run: |
          mkdir -p ${{ matrix.bin}}
          skopeo copy --all oci-archive:./oci-wolfi dir:${{ matrix.bin}}

          echo "=== Image Manifest List ==="
          yq -P -oy ${matrix.bin}/manifest.json
          echo

          echo "=== Processing Individual Manifests ==="
          for digest in $(yq -r '.manifests.[].digest' ${matrix.bin}/manifest.json); do
            sha=${digest#sha256:}
            echo
            echo "=== Manifest for $digest ==="
            yq -P -oy ${matrix.bin}/${sha}.manifest.json
            echo

            # Get config digest and show its contents
            config_digest=$(yq -r '.config.digest' ${matrix.bin}/${sha}.manifest.json)
            config_sha=${config_digest#sha256:}
            echo
            echo "=== Config for $config_digest ==="
            yq -P -oy ${matrix.bin}/${config_sha}.config.json
            echo
          done

      # - name: Convert to OCI directory format
      #   run: |
      #     mkdir -p ./oci-dir-wolfi

      #     # Convert Wolfi image
      #     skopeo copy --all oci-archive:./oci-wolfi oci:./wolfi

      - name: Upload OCI directory to oci directory
        uses: actions/upload-artifact@v4
        with:
          name: wolfi
          path: ./oci-wolfi

      - name: Push `${{ matrix.bin }}` version tag
        if: startswith(github.ref, format('refs/tags/{0}v', matrix.prefix))
        continue-on-error: ${{ github.repository_owner != 'wasmCloud' }}
        uses: ./.github/actions/oci-transformations
        with:
          source-image: oci-archive:./oci-wolfi
          source-tag: ${{ steps.ctx.outputs.version }}
          image-title: ${{ matrix.bin }}
          image-description: "${{ matrix.bin == 'wasmcloud' && 'wasmCloud runtime (Wolfi)' || 'wash CLI tool (Wolfi)' }}"
          image-version: ${{ steps.ctx.outputs.version }}
          target-registries: |
            ${{ steps.ctx.outputs.owner }}
            ghcr.io/${{ steps.ctx.outputs.owner }}
            wasmcloud.azurecr.io/${{ steps.ctx.outputs.owner }}
          image-variants: |
            [
              {
                "name": "wolfi",
                "tags": ["${{ steps.ctx.outputs.version }}-wolfi"]
              }
            ]
          registry-credentials: |
            [
              {
                "url": "ghcr.io",
                "username": "${{ github.actor }}",
                "password": "${{ secrets.GITHUB_TOKEN }}"
              }
            ]

  release:
    needs:
      - build-wash-bin
      - build-wasmcloud-bin
      - oci
    runs-on: ubuntu-22.04
    permissions:
      contents: write
      id-token: write
      attestations: write
    steps:
      - uses: ./dugout/.github/actions/workflow-change-validation-checkout
        with:
          github-assets: |
            ["workflows/provider.yml",
              "actions/artifact-attestation/action.yml",
              "actions/oci-transformations/action.yml",
              "actions/sbom-generation/action.yml",
              "actions/publish-sboms-and-attestations/action.yml"]
      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16
        with:
          path: artifacts

      - run: |
          for dir in ./artifacts/wasmcloud-*; do
            target=${dir#./artifacts/wasmcloud-}
            for bin_path in $(find ${dir}/bin -type f); do
              chmod +x ${bin_path}
              bin=$(basename ${bin_path})
            done
          done

      - run: |
          for dir in ./artifacts/wash-*; do
            target=${dir#./artifacts/wash-}
            for bin_path in $(find ${dir}/bin -type f); do
              chmod +x ${bin_path}
              bin=$(basename ${bin_path})
            done
          done

      # Publish SBOMs and Attestation records
      - uses: ./.github/actions/publish-sboms-and-attestations
        with:
          release_version: ${{ env.WASMCLOUD_TEST_VERSION }}-docs
          registry: ghcr.io
          registry-credentials: |
            [
              {
                "url": "ghcr.io",
                "username": "${{ github.actor }}",
                "password": "${{ secrets.GITHUB_TOKEN }}"
              }
            ]

      # For wasmCloud releases
      - uses: softprops/action-gh-release@01570a1f39cb168c169c802c3bceb9e93fb10974
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          generate_release_notes: true
          body_path: release-notes.md
          files: ./wasmcloud/*

      # For wash-cli releases
      - uses: softprops/action-gh-release@01570a1f39cb168c169c802c3bceb9e93fb10974
        if: startsWith(github.ref, 'refs/tags/wash-cli-v')
        with:
          generate_release_notes: true
          body_path: release-notes.md
          files: ./wash/*

      # Generate release notes with SBOM/attestation info
      - name: Generate Release Notes
        shell: bash
        run: |
          cat > release-notes.md << 'EOF'
          ## Software Bill of Materials and Attestations

          All SBOMs and attestations for this release are available as an OCI artifact at:
          `ghcr.io/${{ github.repository }}/provenance:${{ env.WASMCLOUD_TEST_VERSION }}`

          You can inspect these documents using tools like `regctl`:
          ```bash
          regctl artifact get ghcr.io/${{ github.repository }}/provenance:${{ env.WASMCLOUD_TEST_VERSION }}
          ```

          ---
          ## Release Notes
          EOF

          # Append GitHub's auto-generated release notes
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/releases/generate-notes \
            -f tag_name="${GITHUB_REF#refs/tags/}" \
            | jq -r '.body' >> release-notes.md

      - name: Extract version
        if: startsWith(github.ref, 'refs/tags/wash-cli-v')
        run: |
          VERSION=$(echo "${GITHUB_REF##*/}" | sed -e 's/wash-cli-v//')
          echo "wash_version=$VERSION" >> $GITHUB_ENV

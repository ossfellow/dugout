name: wasmcloud

on:
  workflow_dispatch:
    inputs:
      component:
        required: true
        default: "wasmcloud"
        type: string

permissions:
  contents: read
  packages: write      # For pushing to registries
  id-token: write     # For attestations
  actions: write      # For triggering provider workflow

# Define test environment variables
env:
  TEST_THIS_WORKFLOW: true # Whether to test this workflow
  WASMCLOUD_TEST_VERSION: "v1.5.1" # wasmCloud version to test
  WASH_TEST_VERSION: "wash-cli-v0.38.0" # wash-cli version to test
  RUN_BINARY_ATTESTATION: false # Whether to run the binary attestation workflow
  RUN_PROVIDER_ATTESTATION: true # Whether to run the provider attestation workflow
  RUN_OCI_ATTESTATION: true # Whether to run the OCI attestation workflow
  RUN_PUBLISH_SBOMS_AND_ATTESTATIONS: true # Whether to run the publish SBOMS and attestations workflow

jobs:
  setup-test-ref:
    runs-on: ubuntu-22.04
    steps:
      # Debug step to show .github contents
      - name: List .github directory contents
        run: |
          echo "=== .github directory structure ==="
          find .github -type f 2>/dev/null | sort
          echo "=== End of listing ==="

      - name: Prepare test environment
        uses: ossfellow/.github/actions/tugboat@main
        if: ${{ env.TEST_THIS_WORKFLOW }}
        with:
          target-repo: "wasmCloud/wasmCloud"
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up test tags
        run: |
          # Set up both wasmCloud and wash-cli tags
          git tag ${{ env.WASMCLOUD_TEST_VERSION }}
          git tag ${{ env.WASH_TEST_VERSION }}

          # Checkout the appropriate tag based on workflow context
          if [[ "${{ github.event.inputs.component }}" == "wash" ]]; then
            git checkout ${{ env.WASH_TEST_VERSION }}
          else
            git checkout ${{ env.WASMCLOUD_TEST_VERSION }}
          fi

  build-wash-bin:
    strategy:
      matrix:
        config:
          - target: aarch64-unknown-linux-musl
          - target: x86_64-unknown-linux-musl

    name: wash-${{ matrix.config.target }}
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
      attestations: write
    steps:
      - name: Prepare test environment
        uses: ossfellow/.github/actions/tugboat@main
        if: ${{ env.TEST_THIS_WORKFLOW }}
        with:
          target-repo: "wasmCloud/wasmCloud"
          github-token: ${{ secrets.GITHUB_TOKEN }}
          github-assets: |
            ["actions/artifact-attestation/action.yml",
              "actions/sbom-generation/action.yml"]

      - uses: ./.github/actions/install-nix
      - uses: ./.github/actions/build-nix
        with:
          package: wash-${{ matrix.config.target }}

      # After build completes, attest binaries
      - name: Attest Built Wash Binaries
        uses: ./.github/actions/artifact-attestation
        if: ${{ env.RUN_BINARY_ATTESTATION }}
        with:
          subject-path: ./wash-${{ matrix.config.target }}
          subject-name: wash-${{ matrix.config.target }}
          show-summary: true
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # After attestation, generate SBOMs
      - name: Generate SBOMs for Wash
        uses: ./.github/actions/sbom-generation
        if: ${{ env.RUN_BINARY_ATTESTATION }}
        with:
          artifact-name: wash-${{ matrix.config.target }}
          subject-path: ${{ github.workspace }}
          subject-name: wash
          subject-version: ${{ env.WASH_TEST_VERSION }}
          language: rust

      # Attest SBOMs
      - name: Attest SBOMs for Wash
        uses: ./.github/actions/artifact-attestation
        if: ${{ env.RUN_BINARY_ATTESTATION }}
        with:
          artifact-type: sbom
          subject-path: ./wash-${{ matrix.config.target }}
          subject-name: wash-${{ matrix.config.target }}
          show-summary: true

  build-wasmcloud-bin:
    strategy:
      matrix:
        config:
          - target: aarch64-unknown-linux-musl
          - target: x86_64-unknown-linux-musl

    name: wasmcloud-${{ matrix.config.target }}
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
      attestations: write
    steps:
      - name: Prepare test environment
        uses: ossfellow/.github/actions/tugboat@main
        if: ${{ env.TEST_THIS_WORKFLOW }}
        with:
          target-repo: "wasmCloud/wasmCloud"
          github-token: ${{ secrets.GITHUB_TOKEN }}
          github-assets: |
            ["actions/artifact-attestation/action.yml",
              "actions/sbom-generation/action.yml"]

      - uses: ./.github/actions/install-nix
      - uses: ./.github/actions/build-nix
        with:
          package: wasmcloud-${{ matrix.config.target }}

      # After build completes, attest binaries
      - name: Attest Built WasmCloud Binaries
        uses: ./.github/actions/artifact-attestation
        if: ${{ env.RUN_BINARY_ATTESTATION }}
        with:
          subject-path: ./wasmcloud-${{ matrix.config.target }}
          subject-name: wasmcloud-${{ matrix.config.target }}
          show-summary: true
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # After attestation, generate SBOMs
      - name: Generate SBOMs for WasmCloud
        uses: ./.github/actions/sbom-generation
        if: ${{ env.RUN_BINARY_ATTESTATION }}
        with:
          artifact-name: wasmcloud-${{ matrix.config.target }}
          subject-path: ${{ github.workspace }}
          subject-name: wasmcloud
          subject-version: ${{ env.WASMCLOUD_TEST_VERSION }}
          language: rust

      # Attest SBOMs
      - name: Attest SBOMs for WasmCloud
        uses: ./.github/actions/artifact-attestation
        if: ${{ env.RUN_BINARY_ATTESTATION }}
        with:
          artifact-type: sbom
          subject-path: ./wasmcloud-${{ matrix.config.target }}
          subject-name: wasmcloud-${{ matrix.config.target }}
          show-summary: true

  build-provider-bin:
    strategy:
      matrix:
        name:
          - blobstore-azure
          - http-server

        target:
          - aarch64-unknown-linux-musl
          - x86_64-unknown-linux-musl

    name: ${{ matrix.name }}-provider-${{ matrix.target }}
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
      attestations: write
    steps:
      - name: Prepare test environment
        uses: ossfellow/.github/actions/tugboat@main
        if: ${{ env.TEST_THIS_WORKFLOW }}
        with:
          target-repo: "wasmCloud/wasmCloud"
          github-token: ${{ secrets.GITHUB_TOKEN }}
          github-assets: |
            ["actions/artifact-attestation/action.yml",
              "actions/sbom-generation/action.yml"]

      - uses: ./.github/actions/install-nix
      - uses: ./.github/actions/build-nix
        with:
          package: ${{ matrix.name }}-provider-${{ matrix.target }}

      # After build completes, attest binaries
      - name: Attest Built Provider Binaries
        uses: ./.github/actions/artifact-attestation
        if: ${{ env.RUN_PROVIDER_ATTESTATION }}
        with:
          subject-path: ./${{ matrix.name }}-provider-${{ matrix.target }}
          subject-name: ${{ matrix.name }}-provider-${{ matrix.target }}
          show-summary: true
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # After attestation, generate SBOMs
      - name: Generate SBOMs for Provider
        uses: ./.github/actions/sbom-generation
        if: ${{ env.RUN_PROVIDER_ATTESTATION }}
        with:
          artifact-name: ${{ matrix.name }}-provider-${{ matrix.target }}
          subject-path: ${{ github.workspace }}
          subject-name: ${{ matrix.name }}-provider
          subject-version: ${{ env.WASMCLOUD_TEST_VERSION }}
          language: rust

      # Attest SBOMs
      - name: Attest SBOMs for Provider
        uses: ./.github/actions/artifact-attestation
        if: ${{ env.RUN_PROVIDER_ATTESTATION }}
        with:
          artifact-type: sbom
          subject-path: ./${{ matrix.name }}-provider-${{ matrix.target }}
          subject-name: ${{ matrix.name }}-provider-${{ matrix.target }}
          show-summary: true

  providers:
    strategy:
      matrix:
        include:
          - name: blobstore-azure
            subject: BLOBSTORE_AZURE_SUBJECT
            embed_wit: true

          - name: http-server
            subject: HTTP_SERVER_SUBJECT
            embed_wit: true
    needs:
      - build-wash-bin
      - build-provider-bin
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    uses: ./.github/workflows/provider.yml
    with:
      name: ${{ matrix.name }}
      # embed_wit: ${{ matrix.embed_wit }}

  oci-wash:
    needs:
      - build-wash-bin
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    uses: ./.github/workflows/oci.yml
    with:
      bin: wash
      prefix: wash-cli-

  oci-wasmcloud:
    needs:
      - build-wasmcloud-bin
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    uses: ./.github/workflows/oci.yml
    with:
      bin: wasmcloud
      prefix: ''

  release-wasmcloud:
    # if: startsWith(github.ref, 'refs/tags/v')
    needs:
      - build-wasmcloud-bin
      - oci-wasmcloud
    runs-on: ubuntu-22.04
    permissions:
      contents: write
      packages: write
      id-token: write
      attestations: write
    steps:
      - name: Prepare test environment
        uses: ossfellow/.github/actions/tugboat@main
        if: ${{ env.TEST_THIS_WORKFLOW }}
        with:
          target-repo: "wasmCloud/wasmCloud"
          github-token: ${{ secrets.GITHUB_TOKEN }}
          github-assets: |
            ["actions/publish-sboms-and-attestations/action.yml"]

      - name: Download release artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16
        with:
          path: artifacts
          pattern: wasmcloud-*
      - run: |
          for dir in ./artifacts/wasmcloud-*; do
            if [ -d "${dir}" ]; then
              target=${dir#./artifacts/wasmcloud-}
              for bin_path in $(find ${dir}/bin -type f); do
                chmod +x ${bin_path}
                bin=$(basename ${bin_path})
                case "$bin" in
                  *.exe)
                    bin="${bin%.exe}"
                    mkdir -p ./${bin}
                    mv ${bin_path} ./${bin}/${bin}-${target}.exe
                  ;;
                  *)
                    mkdir -p ./${bin}
                      mv ${bin_path} ./${bin}/${bin}-${target%-fhs}
                    ;;
                  esac
              done
            fi
          done

      # Publish SBOMs and Attestation records
      - name: Publish SBOMs and Attestation records
        uses: ./.github/actions/publish-sboms-and-attestations
        if: ${{ env.RUN_PUBLISH_SBOMS_AND_ATTESTATIONS }}
        with:
          subject-name: wasmcloud
          release-version: ${{ env.WASMCLOUD_TEST_VERSION }}-docs
          registry: ghcr.io
          registry-credentials: |
            [
              {
                \"url\": \"ghcr.io\",
                \"username\": \"${{ github.actor }}\",
                \"password\": \"${{ secrets.GITHUB_TOKEN }}\"
              }
            ]

      # Create release-notes.md file
      - name: Create release-notes.md file
        shell: bash
        run: |
          echo "Generating release notes for wasmCloud"
          cat > release-notes.md << 'EOF'
          ## Release Notes

          This is a mock release for testing the impact of build provenance and SBOM generation on wasmCloud workflows, and the outcome of such changes.
          EOF

      # For wasmCloud releases
      - name: Publish wasmCloud release
        uses: softprops/action-gh-release@01570a1f39cb168c169c802c3bceb9e93fb10974
        # if: startsWith(github.ref, 'refs/tags/v')
        with:
          generate_release_notes: true
          body_path: release-notes.md
          files: ./wasmcloud/*
          tag_name: ${{ env.WASMCLOUD_TEST_VERSION }}

      # Generate release notes with SBOM/attestation info
      - name: Generate Release Notes
        if: ${{ env.RUN_PUBLISH_SBOMS_AND_ATTESTATIONS }}
        shell: bash
        run: |
          cat > release-notes.md << 'EOF'
          ## Software Bill of Materials and Attestations

          All SBOMs and attestations for this release are available as an OCI artifact at:
          `ghcr.io/${{ github.repository }}/wasmcloud-provenance:${{ env.WASMCLOUD_TEST_VERSION }}`

          You can inspect these documents using tools like `regctl`:
          ```bash
          # To list the artifacts in the OCI artifact
          regctl artifact list ghcr.io/${{ github.repository }}/wasmcloud-provenance:${{ env.WASMCLOUD_TEST_VERSION }}

          # To inspect the contents of an artifact
          regctl artifact get ghcr.io/${{ github.repository }}/wasmcloud-provenance:${{ env.WASMCLOUD_TEST_VERSION }} [artifact-manifest-digest-from-previous-command]
          ```

          ---
          ## Release Notes
          EOF

          # Append GitHub's auto-generated release notes
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/releases/generate-notes \
            -d "{\"tag_name\": \"${{ env.WASMCLOUD_TEST_VERSION }}\"}" \
            | jq -r '.body' >> release-notes.md

  release-wash-cli:
    # if: startsWith(github.ref, 'refs/tags/wash-cli-v')
    needs:
      - build-wash-bin
      - oci-wash
    runs-on: ubuntu-22.04
    permissions:
      contents: write
      id-token: write
      attestations: write
    steps:
      - name: Prepare test environment
        uses: ossfellow/.github/actions/tugboat@main
        if: ${{ env.TEST_THIS_WORKFLOW }}
        with:
          target-repo: "wasmCloud/wasmCloud"
          github-token: ${{ secrets.GITHUB_TOKEN }}
          github-assets: |
            ["actions/publish-sboms-and-attestations/action.yml"]
      - name: Download release artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16
        with:
          path: artifacts
          pattern: wash-*
      - run: |
          for dir in ./artifacts/wash-*; do
            if [ -d "${dir}" ]; then
              target=${dir#./artifacts/wash-}
              for bin_path in $(find ${dir}/bin -type f); do
                chmod +x ${bin_path}
                bin=$(basename ${bin_path})
                case "$bin" in
                  *.exe)
                    bin="${bin%.exe}"
                    mkdir -p ./${bin}
                    mv ${bin_path} ./${bin}/${bin}-${target}.exe
                  ;;
                  *)
                    mkdir -p ./${bin}
                    mv ${bin_path} ./${bin}/${bin}-${target%-fhs}
                  ;;
                esac
              done
            fi
          done

      # Publish SBOMs and Attestation records
      - name: Publish SBOMs and Attestation records
        uses: ./.github/actions/publish-sboms-and-attestations
        if: ${{ env.RUN_PUBLISH_SBOMS_AND_ATTESTATIONS }}
        with:
          subject-name: wash-cli
          release-version: ${{ env.WASMCLOUD_TEST_VERSION }}-docs
          registry: ghcr.io
          registry-credentials: |
            [
              {
                \"url\": \"ghcr.io\",
                \"username\": \"${{ github.actor }}\",
                \"password\": \"${{ secrets.GITHUB_TOKEN }}\"
              }
            ]

      # Create release-notes.md file
      - name: Create release-notes.md file
        shell: bash
        run: |
          echo "Generating release notes for wash-cli"
          cat > release-notes.md << 'EOF'
          ## Release Notes

          This is a mock release for testing the impact of build provenance and SBOM generation on wasmCloud workflows, and the outcome of such changes.
          EOF

      # For wash-cli releases
      - name: Publish wash-cli release
        uses: softprops/action-gh-release@01570a1f39cb168c169c802c3bceb9e93fb10974
        # if: startsWith(github.ref, 'refs/tags/wash-cli-v')
        with:
          generate_release_notes: true
          body_path: release-notes.md
          files: ./wash/*
          tag_name: ${{ env.WASH_TEST_VERSION }}
      # Generate release notes with SBOM/attestation info
      - name: Generate Release Notes
        if: ${{ env.RUN_PUBLISH_SBOMS_AND_ATTESTATIONS }}
        shell: bash
        run: |
          cat > release-notes.md << 'EOF'
          ## Software Bill of Materials and Attestations

          All SBOMs and attestations for this release are available as an OCI artifact at:
          `ghcr.io/${{ github.repository }}/wash-cli-provenance:${{ env.WASH_TEST_VERSION }}`

          You can inspect these documents using tools like `regctl`:
          ```bash
          # To list the artifacts in the OCI artifact
          regctl artifact list ghcr.io/${{ github.repository }}/wash-cli-provenance:${{ env.WASH_TEST_VERSION }}

          # To inspect the contents of an artifact
          regctl artifact get ghcr.io/${{ github.repository }}/wash-cli-provenance:${{ env.WASH_TEST_VERSION }} [artifact-manifest-digest-from-previous-command]
          ```

          ---
          ## Release Notes
          EOF

          # Append GitHub's auto-generated release notes
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/releases/generate-notes \
            -d "{\"tag_name\": \"${{ env.WASH_TEST_VERSION }}\"}" \
            | jq -r '.body' >> release-notes.md

name: 'SBOM Generation'
description: 'Generate SBOMs using cargo-sbom for Rust, k8s-sigs/bom for Go, and syft for other artifacts'
inputs:
  artifact-name:
    description: 'Name of the built artifact (binary, image, etc.)'
    required: true
  subject-path:
    description: 'Path to source code or package manifest (e.g., directory containing Cargo.toml)'
    required: true
  subject-name:
    description: 'Name of the source package (e.g., package name in Cargo.toml)'
    required: true
  subject-version:
    description: 'Package version if not discoverable'
    required: false
  language:
    description: 'Language of the project (rust, go, other)'
    required: true

runs:
  using: "composite"
  steps:
    # Setup the directory all attestation and sbom artifacts are to be stored in,
    # if it doesn't exist. This will facilitate structured access across all workflows and actions.
    - name: Setup attestations-and-sboms directory
      shell: bash
      run: |
        mkdir -p ${{ github.workspace }}/attestations-and-sboms
        echo "PROVENANCE_ARTIFACTS_DIR=${{ github.workspace }}/attestations-and-sboms" >> $GITHUB_ENV

    # Setup syft config from attest.yml
    - name: Setup Syft configuration
      if: inputs.language != 'rust' && inputs.language != 'go'
      shell: bash
      run: |
        echo "Setting up Syft configuration"
        cat > .syft.yaml << 'EOF'
        output:
          - spdx-json
        quiet: false
        scope: "squashed"
        format:
          spdx-json:
            pretty: true
        file:
          metadata:
            selection: "all"
            digests: ["sha256"]
            content:
              skip-files-above-size: 10485760
        source:
          name: ${{ inputs.artifact-name }}
          version: ${{ inputs.subject-version }}
          base-path: ${{ inputs.subject-path }}
        log:
          structured: true
          level: "error"
          file: ""
        EOF

    # For Rust projects
    - name: Install cargo-sbom
      if: inputs.language == 'rust'
      shell: bash
      run: cargo install --version 0.9.1 cargo-sbom

    - name: Generate ${{ inputs.subject-name }} Rust SBOM
      if: inputs.language == 'rust'
      shell: bash
      run: |
        echo "Generating ${{ inputs.subject-name }} Rust SBOM"
        if [ -n "${{ inputs.subject-name }}" ]; then
          cargo sbom \
            --cargo-package ${{ inputs.subject-name }} \
            --output-format spdx_json_2_3 \
            --project-directory ${{ inputs.subject-path }} \
            > "${{ env.PROVENANCE_ARTIFACTS_DIR }}/${{ inputs.artifact-name }}.spdx.json"
        else
          cargo sbom \
            --output-format spdx_json_2_3 \
            --project-directory ${{ inputs.subject-path }} \
            > "${{ env.PROVENANCE_ARTIFACTS_DIR }}/${{ inputs.artifact-name }}.spdx.json"
        fi

    # For Go projects
    - name: Install k8s-sigs/bom
      if: inputs.language == 'go'
      shell: bash
      run: go install sigs.k8s.io/bom/cmd/bom@latest

    - name: Generate ${{ inputs.artifact-name }} Go SBOM
      if: inputs.language == 'go'
      shell: bash
      run: |
        echo "Generating ${{ inputs.artifact-name }} Go SBOM"
        bom generate \
          --namespace "https://wasmcloud.com" \
          --name "${{ inputs.artifact-name }}" \
          --dirs "${{ inputs.subject-path }}" \
          --format json \
          --output "${{ env.PROVENANCE_ARTIFACTS_DIR }}/${{ inputs.artifact-name }}.spdx.json"

    # For other artifacts using Anchore's action
    - name: Generate ${{ inputs.artifact-name }} SBOM using Syft
      if: inputs.language != 'rust' && inputs.language != 'go'
      uses: anchore/sbom-action@v0
      with:
        path: ${{ inputs.subject-path }}
        artifact-name: ${{ inputs.artifact-name }}.sbom
        format: spdx-json
        config: .syft.yaml
        output-file: ${{ env.PROVENANCE_ARTIFACTS_DIR }}/${{ inputs.artifact-name }}.spdx.json

    # Make sure the SBOM file exists
    - name: Check if SBOM file exists
      shell: bash
      run: |
        SBOM_FILE_EXISTS=false
        if [ -f "${{ env.PROVENANCE_ARTIFACTS_DIR }}/${{ inputs.artifact-name }}.spdx.json" ]; then
          SBOM_FILE_EXISTS=true
        fi
        echo "SBOM_FILE_EXISTS=${SBOM_FILE_EXISTS}" >> $GITHUB_ENV

    # Upload the SBOM to common artifact storage
    - name: Upload ${{ inputs.artifact-name }} SBOM
      if: ${{ env.SBOM_FILE_EXISTS }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.artifact-name }}.spdx.json
        path: ${{ env.PROVENANCE_ARTIFACTS_DIR }}/${{ inputs.artifact-name }}.spdx.json
        if-no-files-found: warn
        overwrite: true

    # Upload the SBOM used for image attestations to common artifact storage
    - name: Upload ${{ inputs.subject-name }} SBOM
      if: ${{ env.SBOM_FILE_EXISTS }} && ${{ inputs.subject-name != '' }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.subject-name }}.spdx.json
        path: ${{ env.PROVENANCE_ARTIFACTS_DIR }}/${{ inputs.artifact-name }}.spdx.json
        if-no-files-found: warn
        overwrite: true

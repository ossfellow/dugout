name: 'Artifact Attestation'
description: 'Attest artifacts of type `binary`, `image`, and `sbom`'
inputs:
  artifact-type:
    description: 'Type of artifact to attest'
    required: true
    default: 'binary'
  subject-path:
    description: 'Path to the artifact serving as the subject of the attestation'
    required: false
  subject-digest:
    description: 'SHA256 digest of the subject for the attestation'
    required: false
  subject-name:
    description: 'Subject name as it should appear in the attestation'
    required: true
  subject-checksums:
    description: 'Path to checksums file containing digest and name of subjects for attestation'
    required: false
  push-to-registry:
    description: 'Whether to push the attestation to the image registry'
    required: false
    default: 'false'
  show-summary:
    description: 'Whether to attach a list of generated attestations to the workflow run summary page'
    required: false
    default: 'true'
  github-token:
    description: 'GitHub token used to make authenticated API requests'
    required: false
    default: ${{ github.token }}

runs:
  using: "composite"
  steps:
    # Setup the directory all attestation and sbom artifacts are to be stored in,
    # if it doesn't exist. This will facilitate structured access across all workflows and actions.
    - name: Setup attestations-and-sboms directory
      shell: bash
      run: |
        mkdir -p ${{ github.workspace }}/attestations-and-sboms
        echo "PROVENANCE_ARTIFACTS_DIR=${{ github.workspace }}/attestations-and-sboms" >> $GITHUB_ENV
        echo "Input artifact type: ${{ inputs.artifact-type }}"

    - name: Attest ${{ inputs.subject-name }} ${{ inputs.artifact-type }}
      id: attestation
      if: inputs.artifact-type == 'binary' || inputs.artifact-type == 'image'
      uses: actions/attest-build-provenance@v2
      with:
        subject-path: ${{ (inputs.subject-digest || inputs.subject-checksums) && '' || inputs.subject-path }}
        subject-digest: ${{ inputs.subject-digest }}
        subject-name: ${{ inputs.subject-name }}
        subject-checksums: ${{ inputs.subject-digest && '' ||  inputs.subject-checksums }}
        push-to-registry: ${{ (inputs.artifact-type == 'image') && inputs.push-to-registry || 'false' }}
        show-summary: ${{ inputs.show-summary }}
        github-token: ${{ inputs.github-token }}

    - name: Get ${{ inputs.subject-name }} SBOM
      if: inputs.artifact-type == 'sbom' && [ ! -f "${{ env.PROVENANCE_ARTIFACTS_DIR }}/${{ inputs.subject-name }}.spdx.json" ]
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.subject-name }}.spdx.json
        path: ${{ env.PROVENANCE_ARTIFACTS_DIR }}/${{ inputs.subject-name }}.spdx.json
        merge-multiple: true


    - name: Attest ${{ inputs.subject-name }} SBOM
      if: inputs.artifact-type == 'sbom'
      uses: actions/attest-sbom@v2
      with:
        subject-path: ${{ (inputs.subject-digest || inputs.subject-checksums) && '' || inputs.subject-path }}
        subject-digest: ${{ inputs.subject-digest }}
        subject-name: ${{ inputs.subject-name }}
        subject-checksums: ${{ inputs.subject-digest && '' ||  inputs.subject-checksums }}
        sbom-path: ${{ env.PROVENANCE_ARTIFACTS_DIR }}/${{ inputs.subject-name }}.spdx.json
        push-to-registry: ${{ inputs.subject-name && inputs.subject-digest && inputs.push-to-registry || 'false' }}
        show-summary: ${{ inputs.show-summary }}
        github-token: ${{ inputs.github-token }}

    - name: Capture attestation metadata
      shell: bash
      run: |
        # Preserve attestation metadata file
        echo "# Build attestation metadata for: ${{ inputs.subject-name }}" > "${{ env.PROVENANCE_ARTIFACTS_DIR }}/${{ inputs.subject-name }}-attestation-metadata.yaml"
        echo "artifact-type: ${{ inputs.artifact-type }}" >> "${{ env.PROVENANCE_ARTIFACTS_DIR }}/${{ inputs.subject-name }}-attestation-metadata.yaml"
        echo "attestation_id: ${{ steps.attestation.outputs.attestation-id }}" >> "${{ env.PROVENANCE_ARTIFACTS_DIR }}/${{ inputs.subject-name }}-attestation-metadata.yaml"
        echo "attestation_url: ${{ steps.attestation.outputs.attestation-url }}" >> "${{ env.PROVENANCE_ARTIFACTS_DIR }}/${{ inputs.subject-name }}-attestation-metadata.yaml"
        echo "artifact_type: ${{ inputs.artifact-type }}" >> "${{ env.PROVENANCE_ARTIFACTS_DIR }}/${{ inputs.subject-name }}-attestation-metadata.yaml"
        echo "subject_path: ${{ inputs.subject-path }}" >> "${{ env.PROVENANCE_ARTIFACTS_DIR }}/${{ inputs.subject-name }}-attestation-metadata.yaml"
        echo "subject_digest: ${{ inputs.subject-digest }}" >> "${{ env.PROVENANCE_ARTIFACTS_DIR }}/${{ inputs.subject-name }}-attestation-metadata.yaml"
        echo "subject_name: ${{ inputs.subject-name }}" >> "${{ env.PROVENANCE_ARTIFACTS_DIR }}/${{ inputs.subject-name }}-attestation-metadata.yaml"
        echo "subject_checksums: ${{ inputs.subject-checksums }}" >> "${{ env.PROVENANCE_ARTIFACTS_DIR }}/${{ inputs.subject-name }}-attestation-metadata.yaml"
        echo "sbom_path: ${{ env.PROVENANCE_ARTIFACTS_DIR }}/${{ inputs.subject-name }}.spdx.json" >> "${{ env.PROVENANCE_ARTIFACTS_DIR }}/${{ inputs.subject-name }}-attestation-metadata.yaml"
        echo "push_to_registry: ${{ inputs.push-to-registry }}" >> "${{ env.PROVENANCE_ARTIFACTS_DIR }}/${{ inputs.subject-name }}-attestation-metadata.yaml"
        echo "show_summary: ${{ inputs.show-summary }}" >> "${{ env.PROVENANCE_ARTIFACTS_DIR }}/${{ inputs.subject-name }}-attestation-metadata.yaml"

        # Rename and save attestation file
        cp "${{ steps.attestation.outputs.bundle-path }}" ${{ env.PROVENANCE_ARTIFACTS_DIR }}/"${{ inputs.subject-name }}-attestation.json"

    - name: Upload attestation record
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.subject-name }}-attestation.json
        path:  ${{ env.PROVENANCE_ARTIFACTS_DIR }}
        if-no-files-found: warn
        overwrite: true

    - name: Upload attestation metadata
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.subject-name }}-attestation-metadata.yaml
        path: ${{ env.PROVENANCE_ARTIFACTS_DIR }}
        if-no-files-found: warn
        overwrite: true

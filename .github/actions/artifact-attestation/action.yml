name: "Artifact Attestation"
description: "Attest artifacts of type `binary`, `image`, and `sbom`"
inputs:
  artifact-type:
    description: "Type of artifact to attest"
    required: true
    default: "binary"
  artifact-name:
    description: "Name of the artifact to attest"
    required: false
  subject-path:
    description: "Path to the artifact serving as the subject of the attestation"
    required: false
  subject-digest:
    description: "SHA256 digest of the subject for the attestation"
    required: false
  subject-name:
    description: "Subject name as it should appear in the attestation"
    required: true
  subject-checksums:
    description: "Path to checksums file containing digest and name of subjects for attestation"
    required: false
  push-to-registry:
    description: "Whether to push the attestation to the image registry"
    required: false
    default: "false"
  show-summary:
    description: "Whether to attach a list of generated attestations to the workflow run summary page"
    required: false
    default: "true"
  github-token:
    description: "GitHub token used to make authenticated API requests"
    required: false
    default: ${{ github.token }}

runs:
  using: "composite"
  steps:
    # Setup the directory all attestation and sbom artifacts are to be stored in,
    # if it doesn't exist. This will facilitate structured access across all workflows and actions.
    - name: Setup attestations-and-sboms directory
      shell: bash
      run: |
        mkdir -p ${{ github.workspace }}/attestations-and-sboms
        echo "PROVENANCE_ARTIFACTS_DIR=${{ github.workspace }}/attestations-and-sboms" >> $GITHUB_ENV

        # Determine artifact name for SBOM
        if [[ -n "${{ inputs.artifact-name }}" ]]; then
          SBOM_NAME="${{ inputs.artifact-name }}"
        else
          SBOM_NAME="${{ inputs.subject-name }}"
        fi
        echo "SBOM_NAME=${SBOM_NAME}" >> $GITHUB_ENV

        echo "LOCAL_SBOM_FILE=${{ github.workspace }}/attestations-and-sboms/${SBOM_NAME}.spdx.json" >> $GITHUB_ENV
        echo "DOWNLOAD_SBOM=$( [[ ${{ inputs.artifact-type }} == 'sbom' ]] && [[ ! -f ${{ github.workspace }}/attestations-and-sboms/${SBOM_NAME}.spdx.json ]] && echo 'true' || echo 'false' )" >> $GITHUB_ENV
        echo "ARTIFACT_TYPE=${{ inputs.artifact-type }}" >> $GITHUB_ENV

    - name: Attest ${{ inputs.subject-name }} ${{ inputs.artifact-type }}
      id: attestation
      if: inputs.artifact-type == 'binary' || inputs.artifact-type == 'image'
      uses: actions/attest-build-provenance@v2
      with:
        subject-path: ${{ (inputs.subject-digest || inputs.subject-checksums) && '' || inputs.subject-path }}
        subject-digest: ${{ inputs.subject-digest }}
        subject-name: ${{ inputs.subject-name }}
        subject-checksums: ${{ inputs.subject-digest && '' ||  inputs.subject-checksums }}
        push-to-registry: ${{ (inputs.artifact-type == 'image') && inputs.push-to-registry || 'false' }}
        show-summary: ${{ inputs.show-summary }}
        github-token: ${{ inputs.github-token }}

    - name: Get ${{ inputs.subject-name }} SBOM
      if: ${{ env.DOWNLOAD_SBOM == 'true' }}
      continue-on-error: true
      uses: actions/download-artifact@v4
      with:
        name: ${{ env.SBOM_NAME }}.spdx.json
        path: ${{ env.LOCAL_SBOM_FILE }}
        merge-multiple: true

    - name: Attest ${{ inputs.subject-name }} SBOM
      if: inputs.artifact-type == 'sbom'
      uses: actions/attest-sbom@v2
      with:
        subject-path: ${{ (inputs.subject-digest || inputs.subject-checksums) && '' || inputs.subject-path }}
        subject-digest: ${{ inputs.subject-digest }}
        subject-name: ${{ inputs.subject-name }}
        subject-checksums: ${{ inputs.subject-digest && '' ||  inputs.subject-checksums }}
        sbom-path: ${{ env.LOCAL_SBOM_FILE }}
        push-to-registry: ${{ inputs.subject-name && inputs.subject-digest && inputs.push-to-registry || 'false' }}
        show-summary: ${{ inputs.show-summary }}
        github-token: ${{ inputs.github-token }}

    - name: Capture attestation metadata
      shell: bash
      run: |
        # Get attestation outputs based on type
        if [[ "${{ inputs.artifact-type }}" == "sbom" ]]; then
          ATTESTATION_ID="${{ steps.attest-sbom.outputs.attestation-id }}"
          ATTESTATION_URL="${{ steps.attest-sbom.outputs.attestation-url }}"
          BUNDLE_PATH="${{ steps.attest-sbom.outputs.bundle-path }}"
        else
          ATTESTATION_ID="${{ steps.attestation.outputs.attestation-id }}"
          ATTESTATION_URL="${{ steps.attestation.outputs.attestation-url }}"
          BUNDLE_PATH="${{ steps.attestation.outputs.bundle-path }}"
        fi

        # For images, subject-name won't be a valid file name to be used for the metadata and attestation file names;
        # so for this type, we need to transform it (/ and .) to a valid file name.
        if [[ "${{ inputs.artifact-type }}" == "image" ]]; then
          SUBJECT_NAME="${{ inputs.subject-name//\//_}}"
          SUBJECT_NAME="${{ inputs.subject-name//\./_}}"
        else
          SUBJECT_NAME="${{ inputs.subject-name }}"
        fi
        echo "SUBJECT_NAME=${SUBJECT_NAME}" >> $GITHUB_ENV

        # Preserve attestation metadata file
        echo "# Build attestation metadata for: ${{ inputs.subject-name }}" > "${{ env.PROVENANCE_ARTIFACTS_DIR }}/${{ SUBJECT_NAME }}-attestation-metadata.yaml"
        echo "attestation_id: ${ATTESTATION_ID}" >> "${{ env.PROVENANCE_ARTIFACTS_DIR }}/${{ SUBJECT_NAME }}-attestation-metadata.yaml"
        echo "attestation_url: ${ATTESTATION_URL}" >> "${{ env.PROVENANCE_ARTIFACTS_DIR }}/${{ inputs.subject-name }}-attestation-metadata.yaml"
        echo "artifact_type: ${{ inputs.artifact-type }}" >> "${{ env.PROVENANCE_ARTIFACTS_DIR }}/${{ SUBJECT_NAME }}-attestation-metadata.yaml"
        echo "subject_name: ${{ inputs.subject-name }}" >> "${{ env.PROVENANCE_ARTIFACTS_DIR }}/${{ SUBJECT_NAME }}-attestation-metadata.yaml"
        echo "subject_path: ${{ inputs.subject-path }}" >> "${{ env.PROVENANCE_ARTIFACTS_DIR }}/${{ SUBJECT_NAME }}-attestation-metadata.yaml"
        echo "subject_digest: ${{ inputs.subject-digest }}" >> "${{ env.PROVENANCE_ARTIFACTS_DIR }}/${{ SUBJECT_NAME }}-attestation-metadata.yaml"
        echo "subject_checksums: ${{ inputs.subject-checksums }}" >> "${{ env.PROVENANCE_ARTIFACTS_DIR }}/${{ SUBJECT_NAME }}-attestation-metadata.yaml"
        echo "sbom_path: $([ -f ${{ env.LOCAL_SBOM_FILE }} ] && echo ${{ env.LOCAL_SBOM_FILE }} || echo '')" >> "${{ env.PROVENANCE_ARTIFACTS_DIR }}/${{ SUBJECT_NAME }}-attestation-metadata.yaml"
        echo "push_to_registry: ${{ inputs.push-to-registry }}" >> "${{ env.PROVENANCE_ARTIFACTS_DIR }}/${{ SUBJECT_NAME }}-attestation-metadata.yaml"
        echo "show_summary: ${{ inputs.show-summary }}" >> "${{ env.PROVENANCE_ARTIFACTS_DIR }}/${{ SUBJECT_NAME }}-attestation-metadata.yaml"

        # Save attestation file if bundle path exists
        if [[ -n "${BUNDLE_PATH}" ]]; then
          cp "${BUNDLE_PATH}" "${{ env.PROVENANCE_ARTIFACTS_DIR }}/${{ SUBJECT_NAME }}-attestation.json"
        fi

    - name: Upload attestation record
      uses: actions/upload-artifact@v4
      with:
        name: ${{ SUBJECT_NAME }}-attestation.json
        path: ${{ env.PROVENANCE_ARTIFACTS_DIR }}
        if-no-files-found: warn
        overwrite: true

    - name: Upload attestation metadata
      uses: actions/upload-artifact@v4
      with:
        name: ${{ SUBJECT_NAME }}-attestation-metadata.yaml
        path: ${{ env.PROVENANCE_ARTIFACTS_DIR }}
        if-no-files-found: warn
        overwrite: true
